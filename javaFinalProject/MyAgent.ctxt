#BlueJ class context
comment0.params=game\ iAmRed
comment0.target=MyAgent(Connect4Game,\ boolean)
comment0.text=\r\n\ Constructs\ a\ new\ agent,\ giving\ it\ the\ game\ and\ telling\ it\ whether\ it\ is\ Red\ or\ Yellow.\r\n\ \r\n\ @param\ game\ The\ game\ the\ agent\ will\ be\ playing.\r\n\ @param\ iAmRed\ True\ if\ the\ agent\ is\ Red,\ False\ if\ the\ agent\ is\ Yellow.\r\n
comment1.params=
comment1.target=void\ move()
comment1.text=\r\n\ The\ move\ method\ is\ run\ every\ time\ it\ is\ this\ agent's\ turn\ in\ the\ game.\ You\ may\ assume\ that\r\n\ when\ move()\ is\ called,\ the\ game\ has\ at\ least\ one\ open\ slot\ for\ a\ token,\ and\ the\ game\ has\ not\r\n\ already\ been\ won.\r\n\ \r\n\ By\ the\ end\ of\ the\ move\ method,\ the\ agent\ should\ have\ placed\ one\ token\ into\ the\ game\ at\ some\r\n\ point.\r\n\ \r\n\ After\ the\ move()\ method\ is\ called,\ the\ game\ engine\ will\ check\ to\ make\ sure\ the\ move\ was\r\n\ valid.\ A\ move\ might\ be\ invalid\ if\:\r\n\ -\ No\ token\ was\ place\ into\ the\ game.\r\n\ -\ More\ than\ one\ token\ was\ placed\ into\ the\ game.\r\n\ -\ A\ previous\ token\ was\ removed\ from\ the\ game.\r\n\ -\ The\ color\ of\ a\ previous\ token\ was\ changed.\r\n\ -\ There\ are\ empty\ spaces\ below\ where\ the\ token\ was\ placed.\r\n\ \r\n\ If\ an\ invalid\ move\ is\ made,\ the\ game\ engine\ will\ announce\ it\ and\ the\ game\ will\ be\ ended.\r\n\ \r\n
comment2.params=columnNumber
comment2.target=void\ moveOnColumn(int)
comment2.text=\r\n\ Drops\ a\ token\ into\ a\ particular\ column\ so\ that\ it\ will\ fall\ to\ the\ bottom\ of\ the\ column.\r\n\ If\ the\ column\ is\ already\ full,\ nothing\ will\ change.\r\n\ \r\n\ @param\ columnNumber\ The\ column\ into\ which\ to\ drop\ the\ token.\r\n
comment3.params=column
comment3.target=int\ getLowestEmptyIndex(Connect4Column)
comment3.text=\r\n\ Returns\ the\ index\ of\ the\ top\ empty\ slot\ in\ a\ particular\ column.\r\n\ \r\n\ @param\ column\ The\ column\ to\ check.\r\n\ @return\ the\ index\ of\ the\ top\ empty\ slot\ in\ a\ particular\ column;\ -1\ if\ the\ column\ is\ already\ full.\r\n
comment4.params=
comment4.target=int\ randomMove()
comment4.text=\r\n\ Returns\ a\ random\ valid\ move.\ If\ your\ agent\ doesn't\ know\ what\ to\ do,\ making\ a\ random\ move\r\n\ can\ allow\ the\ game\ to\ go\ on\ anyway.\r\n\ \r\n\ @return\ a\ random\ valid\ move.\r\n
comment5.params=
comment5.target=int\ iCanWin()
comment5.text=\r\n\ Returns\ the\ column\ that\ would\ allow\ the\ agent\ to\ win.\r\n\ \r\n\ You\ might\ want\ your\ agent\ to\ check\ to\ see\ if\ it\ has\ a\ winning\ move\ available\ to\ it\ so\ that\r\n\ it\ can\ go\ ahead\ and\ make\ that\ move.\ Implement\ this\ method\ to\ return\ what\ column\ would\r\n\ allow\ the\ agent\ to\ win.\r\n\r\n\ @return\ the\ column\ that\ would\ allow\ the\ agent\ to\ win.\r\n
comment6.params=
comment6.target=int\ theyCanWin()
comment6.text=\r\n\ Returns\ the\ column\ that\ would\ allow\ the\ opponent\ to\ win.\r\n\ \r\n\ You\ might\ want\ your\ agent\ to\ check\ to\ see\ if\ the\ opponent\ would\ have\ any\ winning\ moves\r\n\ available\ so\ your\ agent\ can\ block\ them.\ Implement\ this\ method\ to\ return\ what\ column\ should\r\n\ be\ blocked\ to\ prevent\ the\ opponent\ from\ winning.\r\n\r\n\ @return\ the\ column\ that\ would\ allow\ the\ opponent\ to\ win.\r\n
comment7.params=whoAmI
comment7.target=int\ anyonesGame(boolean)
comment7.text=\r\n\ Returns\ the\ column\ that\ would\ allow\ anyone\ to\ win.\r\n\ \r\n\ The\ purpose\ of\ this\ method\ is\ to\ create\ a\ game\ logic\ for\ red\ and\ yellow.\ \ \r\n\ \r\n\ @param\ whoAmI\ the\ player\ to\ be\ evaluated.\ \ \r\n\ The\ player\ is\ evaluated\ by\ the\ slots\ on\ the\ board.\r\n\r\n\ @return\ the\ column\ that\ would\ allow\ anyone\ to\ win.\r\n
comment8.params=whoAmI\ Slot1\ Slot2\ Slot3
comment8.target=boolean\ checkIfEqual(boolean,\ Connect4Slot,\ Connect4Slot,\ Connect4Slot)
comment8.text=\r\n\ Returns\ true\ or\ false\ if\ the\ passed\ slots\ are\ equal\ to\ the\ agent's\ color.\r\n\ \r\n\ The\ purpose\ of\ this\ method\ is\ to\ determine\ if\ the\ passed\ values\ are\ of\ equal\ color.\ \ \r\n\ \r\n\ @param\ whoAmI\ the\ player\ to\ be\ evaluated.\ \ \r\n\ The\ player\ is\ evaluated\ by\ the\ slots\ on\ the\ board.\r\n\r\n\ @return\ the\ decision\ of\ the\ method\ color\ check.\r\n
comment9.params=
comment9.target=java.lang.String\ getName()
comment9.text=\r\n\ Returns\ the\ name\ of\ this\ agent.\r\n\r\n\ @return\ the\ agent's\ name\r\n
numComments=10
